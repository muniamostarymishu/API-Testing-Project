{
	"info": {
		"_postman_id": "044e276d-60c4-427a-ba81-6e4e1d47d945",
		"name": "Munia_Mostary_Mishu_01407786860",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38967972"
	},
	"item": [
		{
			"name": "Get Student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"pm.test(\"Verify ID\",function(){\r",
							"    pm.expect(jsonData[0].id).to.eql(pm.environment.get(\"id\"))\r",
							"})\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"pm.test(\"First Name Validation\",function(){\r",
							"    pm.expect(jsonData[0].first_name).to.eql(pm.environment.get(\"first_Name\"))\r",
							"})\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"pm.test(\"Middle Name Validation\",function(){\r",
							"    pm.expect(jsonData[0].middle_name).to.eql(pm.environment.get(\"middle_Name\"))\r",
							"})\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"pm.test(\"Last Name Validation\",function(){\r",
							"    pm.expect(jsonData[0].last_name).to.eql(pm.environment.get(\"last_Name\"))\r",
							"})\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"pm.test(\"Verify date of Birth\",function(){\r",
							"    pm.expect(jsonData[0].date_of_birth).to.eql(pm.environment.get(\"date_of_birth\"))\r",
							"})\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"console.log(jsonData.length)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base-url}}/api/studentsDetails",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"api",
						"studentsDetails"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Specific Student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"pm.test(\"Verify ID\",function(){\r",
							"    pm.expect(jsonData.data.id).to.eql(pm.environment.get(\"id\"))\r",
							"})\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"pm.test(\"First Name Validation\",function(){\r",
							"    pm.expect(jsonData.data.first_name).to.eql(pm.environment.get(\"first_Name\"))\r",
							"})\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"pm.test(\"Middle Name Validation\",function(){\r",
							"    pm.expect(jsonData.data.middle_name).to.eql(pm.environment.get(\"middle_Name\"))\r",
							"})\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"pm.test(\"Last Name Validation\",function(){\r",
							"    pm.expect(jsonData.data.last_name).to.eql(pm.environment.get(\"last_Name\"))\r",
							"})\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"pm.test(\"Verify date of Birth\",function(){\r",
							"    pm.expect(jsonData.data.date_of_birth).to.eql(pm.environment.get(\"date_of_birth\"))\r",
							"})\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base-url}}/api/studentsDetails/{{id}}",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"api",
						"studentsDetails",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Student",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var id = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"console.log(id)\r",
							"pm.environment.set(\"id\",id)\r",
							"\r",
							"var first_Name = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(first_Name)\r",
							"pm.environment.set(\"first_Name\",first_Name)\r",
							"\r",
							"var middle_Name = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(middle_Name)\r",
							"pm.environment.set(\"middle_Name\",middle_Name)\r",
							"\r",
							"var last_Name = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(last_Name)\r",
							"pm.environment.set(\"last_Name\",last_Name)\r",
							"\r",
							"const moment = require('moment')\r",
							"const today = moment()\r",
							"var date_of_birth = today.format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"date_of_birth\",date_of_birth)\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var statusCode = pm.response.code\r",
							"console.log(statusCode)\r",
							"if(statusCode==201){\r",
							"        pm.test(\"Status code is 201\", function () {\r",
							"        pm.response.to.have.status(201);\r",
							"    });\r",
							"let jsonData = pm.response.json()\r",
							"pm.environment.set(\"id\",jsonData.id)\r",
							"}else if(statusCode==404){\r",
							"    pm.test(\"Not Found\")\r",
							"}else{\r",
							"    pm.test(\"Something went wrong\")\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \r\n\"first_name\": \"{{first_Name}}\", \r\n\"middle_name\": \"{{middle_Name}}\", \r\n\"last_name\": \"{{last_Name}}\", \r\n\"date_of_birth\": \"{{date_of_birth}}\" \r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/api/studentsDetails/",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"api",
						"studentsDetails",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Technical Skills",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var id = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"console.log(id)\r",
							"pm.environment.set(\"id\",id)\r",
							"\r",
							"var language = pm.variables.replaceIn(\"{{$randomNoun}}\")\r",
							"console.log(language)\r",
							"pm.environment.set(\"language_1\",language)\r",
							"\r",
							"var language = pm.variables.replaceIn(\"{{$randomNoun}}\")\r",
							"console.log(language)\r",
							"pm.environment.set(\"language_2\",language)\r",
							"\r",
							"var yearexp = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"console.log(yearexp)\r",
							"pm.environment.set(\"yearexp\",yearexp)\r",
							"\r",
							"var lastused = pm.variables.replaceIn(\"{{$randomNoun}}\")\r",
							"console.log(lastused)\r",
							"pm.environment.set(\"lastused\",lastused)\r",
							"\r",
							"var st_id = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"console.log(st_id)\r",
							"pm.environment.set(\"st_id\",st_id)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var statusCode = pm.response.code\r",
							"console.log(statusCode)\r",
							"if(statusCode==200){\r",
							"        pm.test(\"Status code is 200\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"    });\r",
							"let jsonData = pm.response.json()\r",
							"pm.environment.set(\"Status\",jsonData.status)\r",
							"}else if(statusCode==404){\r",
							"    pm.test(\"Not Found\")\r",
							"}else{\r",
							"    pm.test(\"Something went wrong\")\r",
							"}\r",
							"\r",
							"var statusCode = pm.response.code\r",
							"console.log(statusCode)\r",
							"if(statusCode==200){\r",
							"        pm.test(\"Status code is 200\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"    });\r",
							"let jsonData = pm.response.json()\r",
							"pm.environment.set(\"Msg\",jsonData.msg)\r",
							"}else if(statusCode==404){\r",
							"    pm.test(\"Not Found\")\r",
							"}else{\r",
							"    pm.test(\"Something went wrong\")\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \r\n\"id\": {{id}}, \r\n\"language\": [ \r\n\"{{language_1}}\", \r\n\"{{language_2}}\" \r\n], \r\n\"yearexp\": \"{{yearexp}}\", \r\n\"lastused\": \"{{lastused}}\", \r\n\"st_id\": {{st_id}} \r\n} \r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://thetestingworldapi.com/api/technicalskills",
					"protocol": "https",
					"host": [
						"thetestingworldapi",
						"com"
					],
					"path": [
						"api",
						"technicalskills"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Student Address",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var House_Number = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"console.log(House_Number)\r",
							"pm.environment.set(\"House_Number\",House_Number)\r",
							"\r",
							"var City = pm.variables.replaceIn(\"{{$randomCity}}\")\r",
							"console.log(City)\r",
							"pm.environment.set(\"City\",City)\r",
							"\r",
							"var State = pm.variables.replaceIn(\"{{$randomStreetName}}\")\r",
							"console.log(State)\r",
							"pm.environment.set(\"State\",State)\r",
							"\r",
							"var Country = pm.variables.replaceIn(\"{{$randomCountry}}\")\r",
							"console.log(Country)\r",
							"pm.environment.set(\"Country\",Country)\r",
							"\r",
							"var Std_Code = pm.variables.replaceIn(\"{{$randomCountryCode}}\")\r",
							"console.log(Std_Code)\r",
							"pm.environment.set(\"Std_Code\",Std_Code)\r",
							"\r",
							"var Home = pm.variables.replaceIn(\"{{$randomStreetAddress}}\")\r",
							"console.log(Home)\r",
							"pm.environment.set(\"Home\",Home)\r",
							"\r",
							"var Mobile = pm.variables.replaceIn(\"{{$randomPhoneNumber}}\")\r",
							"console.log(Mobile)\r",
							"pm.environment.set(\"Mobile\",Mobile)\r",
							"\r",
							"var Std_Code_2 = pm.variables.replaceIn(\"{{$randomCountryCode}}\")\r",
							"console.log(Std_Code_2)\r",
							"pm.environment.set(\"Std_Code_2\",Std_Code_2)\r",
							"\r",
							"var Home_2 = pm.variables.replaceIn(\"{{$randomStreetAddress}}\")\r",
							"console.log(Home_2)\r",
							"pm.environment.set(\"Home_2\",Home_2)\r",
							"\r",
							"var Mobile_2 = pm.variables.replaceIn(\"{{$randomPhoneNumber}}\")\r",
							"console.log(Mobile_2)\r",
							"pm.environment.set(\"Mobile_2\",Mobile_2)\r",
							"\r",
							"var stId = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"console.log(stId)\r",
							"pm.environment.set(\"stId\",stId)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var statusCode = pm.response.code\r",
							"console.log(statusCode)\r",
							"if(statusCode==200){\r",
							"        pm.test(\"Status code is 200\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"    });\r",
							"let jsonData = pm.response.json()\r",
							"pm.environment.set(\"Status\",jsonData.status)\r",
							"}else if(statusCode==404){\r",
							"    pm.test(\"Not Found\")\r",
							"}else{\r",
							"    pm.test(\"Something went wrong\")\r",
							"}\r",
							"\r",
							"var statusCode = pm.response.code\r",
							"console.log(statusCode)\r",
							"if(statusCode==200){\r",
							"        pm.test(\"Status code is 200\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"    });\r",
							"let jsonData = pm.response.json()\r",
							"pm.environment.set(\"Msg\",jsonData.msg)\r",
							"}else if(statusCode==404){\r",
							"    pm.test(\"Not Found\")\r",
							"}else{\r",
							"    pm.test(\"Something went wrong\")\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \r\n\"Permanent_Address\": { \r\n\"House_Number\": \"{{House_Number}}\",\r\n\"City\": \"{{City}}\",\r\n \"State\": \"{{State}}\", \r\n\"Country\": \"{{Country}}\",\r\n\"PhoneNumber\": [ \r\n{ \r\n\"Std_Code\": \"{{Std_Code}}\",\r\n\"Home\": \"{{Home}}\",\r\n \"Mobile\": \"{{Mobile}}\" \r\n},\r\n{ \r\n\"Std_Code\": \"{{Std_Code_2}}\",\r\n\"Home\": \"{{Home_2}}\", \r\n\"Mobile\": \"{{Mobile_2}}\" \r\n} \r\n] \r\n},\r\n\"stId\": {{stId}} \r\n} \r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://thetestingworldapi.com/api/addresses",
					"protocol": "https",
					"host": [
						"thetestingworldapi",
						"com"
					],
					"path": [
						"api",
						"addresses"
					]
				}
			},
			"response": []
		},
		{
			"name": "FINAL STUDENT DETAILS",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"pm.test(\"Verify Language\",function(){\r",
							"    pm.expect(jsonData.language).to.eql(pm.environment.get(\"language\"))\r",
							"})\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"pm.test(\"Verify Year of Experience\",function(){\r",
							"    pm.expect(jsonData.yearexp).to.eql(pm.environment.get(\"yearexp\"))\r",
							"})\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"pm.test(\"Verify House Number\",function(){\r",
							"    pm.expect(jsonData.House_Number).to.eql(pm.environment.get(\"House_Number\"))\r",
							"})\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"pm.test(\"Verify City\",function(){\r",
							"    pm.expect(jsonData.City).to.eql(pm.environment.get(\"City\"))\r",
							"})\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"pm.test(\"Verify Country\",function(){\r",
							"    pm.expect(jsonData.Country).to.eql(pm.environment.get(\"Country\"))\r",
							"})\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"pm.test(\"Verify Mobile Number\",function(){\r",
							"    pm.expect(jsonData.Mobile).to.eql(pm.environment.get(\"Mobile\"))\r",
							"})\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"pm.test(\"Verify Current Address\",function(){\r",
							"    pm.expect(jsonData.Current_Address).to.eql(pm.environment.get(\"Current_Address\"))\r",
							"})\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base-url}}/api/FinalStudentDetails/{{id}}",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"api",
						"FinalStudentDetails",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}